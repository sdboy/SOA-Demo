<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>net.shopin</groupId>
    <artifactId>shopin-soa</artifactId>
    <version>1.0-SNAPSHOT</version>

    <!--子模块-->
    <modules>
        <module>shopin-bean</module>
        <module>shopin-dao</module>
        <module>shopin-dubbo</module>
        <module>shopin-service</module>
        <module>shopin-web</module>
    </modules>

    <!--模块类型-->
    <packaging>pom</packaging>
    <name>shopin-soa</name>

    <!--springboot主版本号-->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.8.RELEASE</version>
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <dubbo.version>2.5.7</dubbo.version>
        <zkclient.version>0.10</zkclient.version>
        <lombok.version>1.16.18</lombok.version>
        <spring.boot.version>1.5.7.RELEASE</spring.boot.version>
        <project.version>1.0-SNAPSHOT</project.version>
        <zookeeper.version>3.4.10</zookeeper.version>
        <spring.boot.starter.dubbo.version>1.0.0</spring.boot.starter.dubbo.version>
        <fastjson.version>1.2.44</fastjson.version>
        <mybatis.spring.boot.starter.version>1.2.2</mybatis.spring.boot.starter.version>
        <mysql.connector.java.version>6.0.6</mysql.connector.java.version>
        <junit.version>4.12</junit.version>
    </properties>

    <!--dependencyManagement让子模块可以继承此pom中的版本号-->
    <dependencyManagement>
        <dependencies>
            <!--引入bean模块-->
            <dependency>
                <groupId>net.shopin</groupId>
                <artifactId>shopin-bean</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!--引入dao模块-->
            <dependency>
                <groupId>net.shopin</groupId>
                <artifactId>shopin-dao</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!--引入dubbo接口模块-->
            <dependency>
                <groupId>net.shopin</groupId>
                <artifactId>shopin-dubbo</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!--引入service实现模块-->
            <dependency>
                <groupId>net.shopin</groupId>
                <artifactId>shopin-service</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!--引入web-api模块-->
            <dependency>
                <groupId>net.shopin</groupId>
                <artifactId>shopin-web</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!--引入fastjson-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <!-- Springboot依赖 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <!-- Springboot-web依赖 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <!--mybatis 与SpingBoot整合-->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis.spring.boot.starter.version}</version>
            </dependency>
            <!--让web项目可以部署到外部tomcat上-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-tomcat</artifactId>
                <version>${spring.boot.version}</version>
                <!--<scope>provided</scope>-->
            </dependency>
            <!--Springboot dubbo 综合配置包 -->
            <dependency>
                <groupId>io.dubbo.springboot</groupId>
                <artifactId>spring-boot-starter-dubbo</artifactId>
                <version>${spring.boot.starter.dubbo.version}</version>
            </dependency>
            <!--定义dubbo版本号-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>dubbo</artifactId>
                <version>${dubbo.version}</version>
            </dependency>

            <!--zookeeper 版本号-->
            <dependency>
                <groupId>org.apache.zookeeper</groupId>
                <artifactId>zookeeper</artifactId>
                <version>${zookeeper.version}</version>
                <type>pom</type>
            </dependency>

            <!-- 使用lombok实现JavaBean的get、set、toString、hashCode、equals等方法的自动生成  -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>

            <!--第三方ZK客户端-->
            <dependency>
                <groupId>com.101tec</groupId>
                <artifactId>zkclient</artifactId>
                <version>${zkclient.version}</version>
            </dependency>

            <!--引入Mysql-->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.connector.java.version}</version>
                <scope>runtime</scope>
            </dependency>

            <!--引入测试-->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
</project>
